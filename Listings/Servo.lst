C51 COMPILER V9.54   SERVO                                                                 03/12/2024 20:46:05 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE SERVO
OBJECT MODULE PLACED IN .\Objects\Servo.obj
COMPILER INVOKED BY: D:\huang\Documents\keil\C51\BIN\C51.EXE Servo.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.
                    -\Listings\Servo.lst) OBJECT(.\Objects\Servo.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "Delay.h"
   3          #include "Servo.h"
   4          sbit servoPin = P3^2;
   5          
   6          // 微秒延迟函数，需要根据单片机的时钟频率来调整
   7          void delay_us(unsigned int us) {
   8   1          while (us--) {
   9   2              // 这里的循环次数需要根据单片机的时钟频率来计算
  10   2              // 例如，如果单片机的时钟频率是12MHz，那么可能需要循环数千次来达到1微秒
  11   2          }
  12   1      }
  13          
  14          // 毫秒延迟函数
  15          void delay_ms(unsigned int ms) {
  16   1          while (ms--) {
  17   2              delay_us(1000); // 假设delay_us函数能准确延迟1微秒
  18   2          }
  19   1      }
  20          
  21          // 设置伺服电机角度
  22          unsigned int pulseWidth;
  23          void setServoAngle(unsigned char angle) {
  24   1          
  25   1          
  26   1          // 根据角度计算脉冲宽度（这里使用的是常见的1.5ms到2.5ms范围）
  27   1          if (angle <= 90) {
  28   2              pulseWidth = 1500 + (2500 - 1500) * angle / 90; // 1.5ms到2ms
  29   2          } else {
  30   2              pulseWidth = 2500 - (2500 - 1500) * (angle - 90) / 90; // 2ms到1.5ms
  31   2          }
  32   1          
  33   1          // 产生PWM脉冲
  34   1          servoPin = 1; // 开始高电平
  35   1          delay_us(pulseWidth / 2); // 延迟到脉冲中间点
  36   1          servoPin = 0; // 切换到低电平
  37   1          delay_us(pulseWidth / 2); // 完成脉冲
  38   1          
  39   1          // 给伺服电机一些响应时间
  40   1          delay_ms(10);
  41   1      }
  42          
  43          unsigned char angle;
  44          void servo() {
  45   1              
  46   1          while (1) {
  47   2                      
  48   2              // 电机从0度到180度
  49   2              for (angle = 0; angle <= 180; angle += 1) {
  50   3                              
  51   3                  setServoAngle(angle);
  52   3              }
  53   2              
  54   2              // 电机从180度到0度
C51 COMPILER V9.54   SERVO                                                                 03/12/2024 20:46:05 PAGE 2   

  55   2              for (angle = 180; angle >= 0; angle -= 1) {
  56   3                  setServoAngle(angle);
  57   3              }
  58   2          }
  59   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    164    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
